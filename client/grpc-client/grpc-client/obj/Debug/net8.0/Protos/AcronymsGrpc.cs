// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/acronyms.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcAcronymsClient {
  public static partial class AcronymService
  {
    static readonly string __ServiceName = "acronyms.AcronymService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.Acronym> __Marshaller_acronyms_Acronym = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.Acronym.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.Empty> __Marshaller_acronyms_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.AcronymList> __Marshaller_acronyms_AcronymList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.AcronymList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.IdRequest> __Marshaller_acronyms_IdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.IdRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.Acronym, global::GrpcAcronymsClient.Acronym> __Method_create = new grpc::Method<global::GrpcAcronymsClient.Acronym, global::GrpcAcronymsClient.Acronym>(
        grpc::MethodType.Unary,
        __ServiceName,
        "create",
        __Marshaller_acronyms_Acronym,
        __Marshaller_acronyms_Acronym);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.Empty, global::GrpcAcronymsClient.AcronymList> __Method_get_all = new grpc::Method<global::GrpcAcronymsClient.Empty, global::GrpcAcronymsClient.AcronymList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "get_all",
        __Marshaller_acronyms_Empty,
        __Marshaller_acronyms_AcronymList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.Acronym, global::GrpcAcronymsClient.Acronym> __Method_update = new grpc::Method<global::GrpcAcronymsClient.Acronym, global::GrpcAcronymsClient.Acronym>(
        grpc::MethodType.Unary,
        __ServiceName,
        "update",
        __Marshaller_acronyms_Acronym,
        __Marshaller_acronyms_Acronym);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.Acronym, global::GrpcAcronymsClient.Empty> __Method_delete = new grpc::Method<global::GrpcAcronymsClient.Acronym, global::GrpcAcronymsClient.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "delete",
        __Marshaller_acronyms_Acronym,
        __Marshaller_acronyms_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.IdRequest, global::GrpcAcronymsClient.Acronym> __Method_findById = new grpc::Method<global::GrpcAcronymsClient.IdRequest, global::GrpcAcronymsClient.Acronym>(
        grpc::MethodType.Unary,
        __ServiceName,
        "findById",
        __Marshaller_acronyms_IdRequest,
        __Marshaller_acronyms_Acronym);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcAcronymsClient.AcronymsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for AcronymService</summary>
    public partial class AcronymServiceClient : grpc::ClientBase<AcronymServiceClient>
    {
      /// <summary>Creates a new client for AcronymService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AcronymServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AcronymService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AcronymServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AcronymServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AcronymServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Acronym create(global::GrpcAcronymsClient.Acronym request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Acronym create(global::GrpcAcronymsClient.Acronym request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Acronym> createAsync(global::GrpcAcronymsClient.Acronym request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Acronym> createAsync(global::GrpcAcronymsClient.Acronym request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.AcronymList get_all(global::GrpcAcronymsClient.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_all(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.AcronymList get_all(global::GrpcAcronymsClient.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_get_all, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.AcronymList> get_allAsync(global::GrpcAcronymsClient.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_allAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.AcronymList> get_allAsync(global::GrpcAcronymsClient.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_get_all, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Acronym update(global::GrpcAcronymsClient.Acronym request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Acronym update(global::GrpcAcronymsClient.Acronym request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Acronym> updateAsync(global::GrpcAcronymsClient.Acronym request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Acronym> updateAsync(global::GrpcAcronymsClient.Acronym request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Empty delete(global::GrpcAcronymsClient.Acronym request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Empty delete(global::GrpcAcronymsClient.Acronym request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_delete, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Empty> deleteAsync(global::GrpcAcronymsClient.Acronym request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Empty> deleteAsync(global::GrpcAcronymsClient.Acronym request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_delete, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Acronym findById(global::GrpcAcronymsClient.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return findById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Acronym findById(global::GrpcAcronymsClient.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_findById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Acronym> findByIdAsync(global::GrpcAcronymsClient.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return findByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Acronym> findByIdAsync(global::GrpcAcronymsClient.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_findById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AcronymServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AcronymServiceClient(configuration);
      }
    }

  }
  public static partial class AcronymTrainDataService
  {
    static readonly string __ServiceName = "acronyms.AcronymTrainDataService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.AcronymTrainData> __Marshaller_acronyms_AcronymTrainData = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.AcronymTrainData.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.Empty> __Marshaller_acronyms_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.AcronymTrainDataList> __Marshaller_acronyms_AcronymTrainDataList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.AcronymTrainDataList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.IdRequest> __Marshaller_acronyms_IdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.IdRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.AcronymTrainData, global::GrpcAcronymsClient.AcronymTrainData> __Method_create = new grpc::Method<global::GrpcAcronymsClient.AcronymTrainData, global::GrpcAcronymsClient.AcronymTrainData>(
        grpc::MethodType.Unary,
        __ServiceName,
        "create",
        __Marshaller_acronyms_AcronymTrainData,
        __Marshaller_acronyms_AcronymTrainData);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.Empty, global::GrpcAcronymsClient.AcronymTrainDataList> __Method_get_all = new grpc::Method<global::GrpcAcronymsClient.Empty, global::GrpcAcronymsClient.AcronymTrainDataList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "get_all",
        __Marshaller_acronyms_Empty,
        __Marshaller_acronyms_AcronymTrainDataList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.AcronymTrainData, global::GrpcAcronymsClient.AcronymTrainData> __Method_update = new grpc::Method<global::GrpcAcronymsClient.AcronymTrainData, global::GrpcAcronymsClient.AcronymTrainData>(
        grpc::MethodType.Unary,
        __ServiceName,
        "update",
        __Marshaller_acronyms_AcronymTrainData,
        __Marshaller_acronyms_AcronymTrainData);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.AcronymTrainData, global::GrpcAcronymsClient.Empty> __Method_delete = new grpc::Method<global::GrpcAcronymsClient.AcronymTrainData, global::GrpcAcronymsClient.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "delete",
        __Marshaller_acronyms_AcronymTrainData,
        __Marshaller_acronyms_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.IdRequest, global::GrpcAcronymsClient.AcronymTrainData> __Method_findById = new grpc::Method<global::GrpcAcronymsClient.IdRequest, global::GrpcAcronymsClient.AcronymTrainData>(
        grpc::MethodType.Unary,
        __ServiceName,
        "findById",
        __Marshaller_acronyms_IdRequest,
        __Marshaller_acronyms_AcronymTrainData);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcAcronymsClient.AcronymsReflection.Descriptor.Services[1]; }
    }

    /// <summary>Client for AcronymTrainDataService</summary>
    public partial class AcronymTrainDataServiceClient : grpc::ClientBase<AcronymTrainDataServiceClient>
    {
      /// <summary>Creates a new client for AcronymTrainDataService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AcronymTrainDataServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AcronymTrainDataService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AcronymTrainDataServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AcronymTrainDataServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AcronymTrainDataServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.AcronymTrainData create(global::GrpcAcronymsClient.AcronymTrainData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.AcronymTrainData create(global::GrpcAcronymsClient.AcronymTrainData request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.AcronymTrainData> createAsync(global::GrpcAcronymsClient.AcronymTrainData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.AcronymTrainData> createAsync(global::GrpcAcronymsClient.AcronymTrainData request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.AcronymTrainDataList get_all(global::GrpcAcronymsClient.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_all(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.AcronymTrainDataList get_all(global::GrpcAcronymsClient.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_get_all, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.AcronymTrainDataList> get_allAsync(global::GrpcAcronymsClient.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_allAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.AcronymTrainDataList> get_allAsync(global::GrpcAcronymsClient.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_get_all, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.AcronymTrainData update(global::GrpcAcronymsClient.AcronymTrainData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.AcronymTrainData update(global::GrpcAcronymsClient.AcronymTrainData request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.AcronymTrainData> updateAsync(global::GrpcAcronymsClient.AcronymTrainData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.AcronymTrainData> updateAsync(global::GrpcAcronymsClient.AcronymTrainData request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Empty delete(global::GrpcAcronymsClient.AcronymTrainData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Empty delete(global::GrpcAcronymsClient.AcronymTrainData request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_delete, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Empty> deleteAsync(global::GrpcAcronymsClient.AcronymTrainData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Empty> deleteAsync(global::GrpcAcronymsClient.AcronymTrainData request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_delete, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.AcronymTrainData findById(global::GrpcAcronymsClient.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return findById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.AcronymTrainData findById(global::GrpcAcronymsClient.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_findById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.AcronymTrainData> findByIdAsync(global::GrpcAcronymsClient.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return findByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.AcronymTrainData> findByIdAsync(global::GrpcAcronymsClient.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_findById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AcronymTrainDataServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AcronymTrainDataServiceClient(configuration);
      }
    }

  }
  public static partial class TrainsetService
  {
    static readonly string __ServiceName = "acronyms.TrainsetService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.Trainset> __Marshaller_acronyms_Trainset = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.Trainset.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.Empty> __Marshaller_acronyms_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.TrainsetList> __Marshaller_acronyms_TrainsetList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.TrainsetList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.IdRequest> __Marshaller_acronyms_IdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.IdRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.Trainset, global::GrpcAcronymsClient.Trainset> __Method_create = new grpc::Method<global::GrpcAcronymsClient.Trainset, global::GrpcAcronymsClient.Trainset>(
        grpc::MethodType.Unary,
        __ServiceName,
        "create",
        __Marshaller_acronyms_Trainset,
        __Marshaller_acronyms_Trainset);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.Empty, global::GrpcAcronymsClient.TrainsetList> __Method_get_all = new grpc::Method<global::GrpcAcronymsClient.Empty, global::GrpcAcronymsClient.TrainsetList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "get_all",
        __Marshaller_acronyms_Empty,
        __Marshaller_acronyms_TrainsetList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.Trainset, global::GrpcAcronymsClient.Trainset> __Method_update = new grpc::Method<global::GrpcAcronymsClient.Trainset, global::GrpcAcronymsClient.Trainset>(
        grpc::MethodType.Unary,
        __ServiceName,
        "update",
        __Marshaller_acronyms_Trainset,
        __Marshaller_acronyms_Trainset);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.Trainset, global::GrpcAcronymsClient.Empty> __Method_delete = new grpc::Method<global::GrpcAcronymsClient.Trainset, global::GrpcAcronymsClient.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "delete",
        __Marshaller_acronyms_Trainset,
        __Marshaller_acronyms_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.IdRequest, global::GrpcAcronymsClient.Trainset> __Method_findById = new grpc::Method<global::GrpcAcronymsClient.IdRequest, global::GrpcAcronymsClient.Trainset>(
        grpc::MethodType.Unary,
        __ServiceName,
        "findById",
        __Marshaller_acronyms_IdRequest,
        __Marshaller_acronyms_Trainset);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcAcronymsClient.AcronymsReflection.Descriptor.Services[2]; }
    }

    /// <summary>Client for TrainsetService</summary>
    public partial class TrainsetServiceClient : grpc::ClientBase<TrainsetServiceClient>
    {
      /// <summary>Creates a new client for TrainsetService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TrainsetServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TrainsetService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TrainsetServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TrainsetServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TrainsetServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Trainset create(global::GrpcAcronymsClient.Trainset request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Trainset create(global::GrpcAcronymsClient.Trainset request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Trainset> createAsync(global::GrpcAcronymsClient.Trainset request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Trainset> createAsync(global::GrpcAcronymsClient.Trainset request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.TrainsetList get_all(global::GrpcAcronymsClient.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_all(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.TrainsetList get_all(global::GrpcAcronymsClient.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_get_all, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.TrainsetList> get_allAsync(global::GrpcAcronymsClient.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_allAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.TrainsetList> get_allAsync(global::GrpcAcronymsClient.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_get_all, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Trainset update(global::GrpcAcronymsClient.Trainset request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Trainset update(global::GrpcAcronymsClient.Trainset request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Trainset> updateAsync(global::GrpcAcronymsClient.Trainset request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Trainset> updateAsync(global::GrpcAcronymsClient.Trainset request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Empty delete(global::GrpcAcronymsClient.Trainset request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Empty delete(global::GrpcAcronymsClient.Trainset request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_delete, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Empty> deleteAsync(global::GrpcAcronymsClient.Trainset request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Empty> deleteAsync(global::GrpcAcronymsClient.Trainset request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_delete, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Trainset findById(global::GrpcAcronymsClient.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return findById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Trainset findById(global::GrpcAcronymsClient.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_findById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Trainset> findByIdAsync(global::GrpcAcronymsClient.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return findByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Trainset> findByIdAsync(global::GrpcAcronymsClient.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_findById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TrainsetServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TrainsetServiceClient(configuration);
      }
    }

  }
  public static partial class TrainsetContentService
  {
    static readonly string __ServiceName = "acronyms.TrainsetContentService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.TrainsetContent> __Marshaller_acronyms_TrainsetContent = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.TrainsetContent.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.Empty> __Marshaller_acronyms_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.TrainsetContentList> __Marshaller_acronyms_TrainsetContentList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.TrainsetContentList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcAcronymsClient.IdRequest> __Marshaller_acronyms_IdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcAcronymsClient.IdRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.TrainsetContent, global::GrpcAcronymsClient.TrainsetContent> __Method_create = new grpc::Method<global::GrpcAcronymsClient.TrainsetContent, global::GrpcAcronymsClient.TrainsetContent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "create",
        __Marshaller_acronyms_TrainsetContent,
        __Marshaller_acronyms_TrainsetContent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.Empty, global::GrpcAcronymsClient.TrainsetContentList> __Method_get_all = new grpc::Method<global::GrpcAcronymsClient.Empty, global::GrpcAcronymsClient.TrainsetContentList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "get_all",
        __Marshaller_acronyms_Empty,
        __Marshaller_acronyms_TrainsetContentList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.TrainsetContent, global::GrpcAcronymsClient.TrainsetContent> __Method_update = new grpc::Method<global::GrpcAcronymsClient.TrainsetContent, global::GrpcAcronymsClient.TrainsetContent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "update",
        __Marshaller_acronyms_TrainsetContent,
        __Marshaller_acronyms_TrainsetContent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.TrainsetContent, global::GrpcAcronymsClient.Empty> __Method_delete = new grpc::Method<global::GrpcAcronymsClient.TrainsetContent, global::GrpcAcronymsClient.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "delete",
        __Marshaller_acronyms_TrainsetContent,
        __Marshaller_acronyms_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcAcronymsClient.IdRequest, global::GrpcAcronymsClient.TrainsetContent> __Method_findById = new grpc::Method<global::GrpcAcronymsClient.IdRequest, global::GrpcAcronymsClient.TrainsetContent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "findById",
        __Marshaller_acronyms_IdRequest,
        __Marshaller_acronyms_TrainsetContent);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcAcronymsClient.AcronymsReflection.Descriptor.Services[3]; }
    }

    /// <summary>Client for TrainsetContentService</summary>
    public partial class TrainsetContentServiceClient : grpc::ClientBase<TrainsetContentServiceClient>
    {
      /// <summary>Creates a new client for TrainsetContentService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TrainsetContentServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TrainsetContentService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TrainsetContentServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TrainsetContentServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TrainsetContentServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.TrainsetContent create(global::GrpcAcronymsClient.TrainsetContent request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.TrainsetContent create(global::GrpcAcronymsClient.TrainsetContent request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.TrainsetContent> createAsync(global::GrpcAcronymsClient.TrainsetContent request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.TrainsetContent> createAsync(global::GrpcAcronymsClient.TrainsetContent request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.TrainsetContentList get_all(global::GrpcAcronymsClient.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_all(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.TrainsetContentList get_all(global::GrpcAcronymsClient.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_get_all, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.TrainsetContentList> get_allAsync(global::GrpcAcronymsClient.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return get_allAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.TrainsetContentList> get_allAsync(global::GrpcAcronymsClient.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_get_all, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.TrainsetContent update(global::GrpcAcronymsClient.TrainsetContent request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.TrainsetContent update(global::GrpcAcronymsClient.TrainsetContent request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.TrainsetContent> updateAsync(global::GrpcAcronymsClient.TrainsetContent request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.TrainsetContent> updateAsync(global::GrpcAcronymsClient.TrainsetContent request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Empty delete(global::GrpcAcronymsClient.TrainsetContent request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.Empty delete(global::GrpcAcronymsClient.TrainsetContent request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_delete, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Empty> deleteAsync(global::GrpcAcronymsClient.TrainsetContent request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.Empty> deleteAsync(global::GrpcAcronymsClient.TrainsetContent request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_delete, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.TrainsetContent findById(global::GrpcAcronymsClient.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return findById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcAcronymsClient.TrainsetContent findById(global::GrpcAcronymsClient.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_findById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.TrainsetContent> findByIdAsync(global::GrpcAcronymsClient.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return findByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcAcronymsClient.TrainsetContent> findByIdAsync(global::GrpcAcronymsClient.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_findById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TrainsetContentServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TrainsetContentServiceClient(configuration);
      }
    }

  }
}
#endregion
